---
// Learn about using Astro layouts:
// https://docs.astro.build/en/core-concepts/layouts/

// Component Imports
import MainHead from '../components/MainHead.astro';
import Nav from '../components/Nav.astro';


interface Props {
    title?: string | undefined;
    description?: string | undefined;
    subtitle?: string | undefined;
    tagline?: string | undefined;
}

const { title, description, subtitle, tagline } = Astro.props;
---

<html lang="en">
    <head>
        <MainHead title={title} description={description} subtitle={subtitle} tagline={tagline} />
    </head>
    <body>
        <div class="stack backgrounds">
            <Nav />
            <slot />
            
        </div>

        <script>
            // Add “loaded” class once the document has completely loaded.
            addEventListener('load', () => document.documentElement.classList.add('loaded'));
        </script>

        <style>
            :root {
                /* --- Light Mode Backgrounds --- */
                --light-mode-gradient: linear-gradient(135deg, #a8dadc, #457b9d); /* Your beautiful gradient */
				--light-mode-secondary-gradient: linear-gradient(135deg, #f1faee, #a8dadc); /* Optional secondary gradient */
                /* Subtle grid: adjust stroke (color, opacity) and stroke-width as needed */
                --light-mode-grid-svg: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="100" height="100" fill="none" stroke="rgba(0,0,0,0.08)" stroke-width="0.8"><path d="M0 0h100v100H0z"/><path d="M0 0L100 100M100 0L0 100"/></svg>');
                
                --grid-blur-amount: blur(2px); /* Adjust blur intensity */
                --grid-opacity: 0.8; /* Adjust grid visibility */

                /* Default background properties (for light mode) */
                --main-background-layer: var(--light-mode-gradient);
                --grid-image-layer: var(--light-mode-grid-svg);
                --final-background-color: #F0F0F0; /* Fallback/base color if no gradient/image */


                /* Original variables from your code (keeping them for now if other parts of your app use them) */
                --_placeholder-bg: linear-gradient(transparent, transparent);
                --bg-image-aspect-ratio: 2.25;
                --bg-scale: 1.68;
                --bg-aspect-ratio: calc(var(--bg-image-aspect-ratio) / var(--bg-scale));
                --bg-gradient-size: calc(var(--bg-scale) * 100%); 
            }

            /* --- Dark Mode Overrides --- */
            :root.theme-dark {
                --main-background-layer: url('../../public/images/dg1.png'); /* Dark mode background image */
				--light-mode-gradient: none; /* Remove light mode gradient */
                --grid-image-layer: none; /* No grid in dark mode */
                --final-background-color: #090b11; /* Solid dark color */
                
                --grid-blur-amount: none; /* Remove blur in dark mode */
                --grid-opacity: 1; /* Reset opacity */
            }

            /* Lazy load backgrounds (ensure these variables are set consistently with main/grid layers if used) */
            :root.loaded {
                /* If you want these to follow the main background, set them here */
                /* For simplicity, we're focusing on .backgrounds below */
            }
            @media (min-width: 50em) {
                :root {
                    --bg-scale: 1;
                }
            }

            .backgrounds {
                min-height: 100vh;
                position: relative; /* Needed for pseudo-element positioning */
                z-index: 0; /* Ensure content is above background */
                overflow: hidden; /* To contain blur effects if they go beyond bounds */

                /* Apply the main background layer directly to .backgrounds */
                background: var(--main-background-layer);
                background-color: var(--final-background-color); /* Fallback */

                /* Add noise overlay if desired */
                background-image: url('../../public/images/noise.png'), var(--main-background-layer);
                background-position: top center, center;
                background-size: 220px repeat, cover; /* Noise size, main background covers */
                background-repeat: repeat, no-repeat;
                background-blend-mode: overlay, normal;
            }

            /* Pseudo-element for the Blurred Grid */
            .backgrounds::before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background-image: var(--grid-image-layer);
                background-size: 100px 100px; /* Size of each grid cell */
                background-repeat: repeat; /* Repeat the grid pattern */
                
                opacity: var(--grid-opacity);
                filter: var(--grid-blur-amount);
                -webkit-filter: var(--grid-blur-amount);
                z-index: -1; /* Place behind the main .backgrounds content */
            }

            /* Original media query for forced colors */
            @media (forced-colors: active) {
                .backgrounds {
                    background-blend-mode: none;
                    --bg-gradient-size: none;
                }
            }
        </style>